"use strict";var ApplicationConfiguration=function(){var applicationModuleName="ape",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("archives"),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("authors"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("events"),ApplicationConfiguration.registerModule("news"),ApplicationConfiguration.registerModule("users"),angular.module("archives").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Archives","archives","dropdown","/archives(/create)?"),Menus.addSubMenuItem("topbar","archives","List Archives","archives"),Menus.addSubMenuItem("topbar","archives","New Archive","archives/create")}]),angular.module("archives").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArchives",{url:"/archives",templateUrl:"modules/archives/views/list-archives.client.view.html"}).state("createArchive",{url:"/archives/create",templateUrl:"modules/archives/views/create-archive.client.view.html"}).state("viewArchive",{url:"/archives/:archiveId",templateUrl:"modules/archives/views/view-archive.client.view.html"}).state("editArchive",{url:"/archives/:archiveId/edit",templateUrl:"modules/archives/views/edit-archive.client.view.html"})}]),angular.module("archives").controller("ArchivesController",["$scope","$stateParams","$location","Authentication","Archives",function($scope,$stateParams,$location,Authentication,Archives){$scope.authentication=Authentication,$scope.create=function(){var archive=new Archives({name:this.name});archive.$save(function(response){$location.path("archives/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(archive){if(archive){archive.$remove();for(var i in $scope.archives)$scope.archives[i]===archive&&$scope.archives.splice(i,1)}else $scope.archive.$remove(function(){$location.path("archives")})},$scope.update=function(){var archive=$scope.archive;archive.$update(function(){$location.path("archives/"+archive._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.archives=Archives.query()},$scope.findOne=function(){$scope.archive=Archives.get({archiveId:$stateParams.archiveId})}}]),angular.module("archives").factory("Archives",["$resource",function($resource){return $resource("archives/:archiveId",{archiveId:"@_id"},{update:{method:"PUT"}})}]),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?",!0),Menus.addSubMenuItem("topbar","articles","List Articles","articles",!1,["user","editor","admin"]),Menus.addSubMenuItem("topbar","articles","New Article","articles/create",!1,["user","editor","admin"])}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("authors").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Authors","authors","dropdown","/authors(/create)?"),Menus.addSubMenuItem("topbar","authors","List Authors","authors"),Menus.addSubMenuItem("topbar","authors","New Author","authors/create")}]),angular.module("authors").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAuthors",{url:"/authors",templateUrl:"modules/authors/views/list-authors.client.view.html"}).state("createAuthor",{url:"/authors/create",templateUrl:"modules/authors/views/create-author.client.view.html"}).state("viewAuthor",{url:"/authors/:authorId",templateUrl:"modules/authors/views/view-author.client.view.html"}).state("editAuthor",{url:"/authors/:authorId/edit",templateUrl:"modules/authors/views/edit-author.client.view.html"})}]),angular.module("authors").controller("AuthorsController",["$scope","$stateParams","$location","Authentication","Authors",function($scope,$stateParams,$location,Authentication,Authors){$scope.authentication=Authentication,$scope.create=function(){var author=new Authors({name:this.name});author.$save(function(response){$location.path("authors/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(author){if(author){author.$remove();for(var i in $scope.authors)$scope.authors[i]===author&&$scope.authors.splice(i,1)}else $scope.author.$remove(function(){$location.path("authors")})},$scope.update=function(){var author=$scope.author;author.$update(function(){$location.path("authors/"+author._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.authors=Authors.query()},$scope.findOne=function(){$scope.author=Authors.get({authorId:$stateParams.authorId})}}]),angular.module("authors").factory("Authors",["$resource",function($resource){return $resource("authors/:authorId",{authorId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Editorial","editorial","/editorial",!0)}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("editorial",{url:"/editorial",templateUrl:"modules/core/views/editorial.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*","user","editor","admin"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!0,roles:["*"]})}]),angular.module("events").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Events","events","dropdown","/events(/create)?"),Menus.addSubMenuItem("topbar","events","List Events","events"),Menus.addSubMenuItem("topbar","events","New Event","events/create")}]),angular.module("events").config(["$stateProvider",function($stateProvider){$stateProvider.state("listEvents",{url:"/events",templateUrl:"modules/events/views/list-events.client.view.html"}).state("createEvent",{url:"/events/create",templateUrl:"modules/events/views/create-event.client.view.html"}).state("viewEvent",{url:"/events/:eventId",templateUrl:"modules/events/views/view-event.client.view.html"}).state("editEvent",{url:"/events/:eventId/edit",templateUrl:"modules/events/views/edit-event.client.view.html"})}]),angular.module("events").controller("EventsController",["$scope","$stateParams","$location","Authentication","Events",function($scope,$stateParams,$location,Authentication,Events){$scope.authentication=Authentication,$scope.create=function(){var event=new Events({name:this.name});event.$save(function(response){$location.path("events/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(event){if(event){event.$remove();for(var i in $scope.events)$scope.events[i]===event&&$scope.events.splice(i,1)}else $scope.event.$remove(function(){$location.path("events")})},$scope.update=function(){var event=$scope.event;event.$update(function(){$location.path("events/"+event._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.events=Events.query()},$scope.findOne=function(){$scope.event=Events.get({eventId:$stateParams.eventId})}}]),angular.module("events").factory("Events",["$resource",function($resource){return $resource("events/:eventId",{eventId:"@_id"},{update:{method:"PUT"}})}]),angular.module("news").run(["Menus",function(Menus){Menus.addMenuItem("topbar","News","news","dropdown","/news(/create)?"),Menus.addSubMenuItem("topbar","news","List News","news"),Menus.addSubMenuItem("topbar","news","New News","news/create")}]),angular.module("news").config(["$stateProvider",function($stateProvider){$stateProvider.state("listNews",{url:"/news",templateUrl:"modules/news/views/list-news.client.view.html"}).state("createNews",{url:"/news/create",templateUrl:"modules/news/views/create-news.client.view.html"}).state("viewNews",{url:"/news/:newsId",templateUrl:"modules/news/views/view-news.client.view.html"}).state("editNews",{url:"/news/:newsId/edit",templateUrl:"modules/news/views/edit-news.client.view.html"})}]),angular.module("news").controller("NewsController",["$scope","$stateParams","$location","Authentication","News",function($scope,$stateParams,$location,Authentication,News){$scope.authentication=Authentication,$scope.create=function(){var news=new News({name:this.name});news.$save(function(response){$location.path("news/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(news){if(news){news.$remove();for(var i in $scope.news)$scope.news[i]===news&&$scope.news.splice(i,1)}else $scope.news.$remove(function(){$location.path("news")})},$scope.update=function(){var news=$scope.news;news.$update(function(){$location.path("news/"+news._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.news=News.query()},$scope.findOne=function(){$scope.news=News.get({newsId:$stateParams.newsId})}}]),angular.module("news").factory("News",["$resource",function($resource){return $resource("news/:newsId",{newsId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Users","users","dropdown","/users(/create)?",!0),Menus.addSubMenuItem("topbar","users","Manage Users","users",!1,["user","editor","admin"]),Menus.addSubMenuItem("topbar","users","New User","users/create",!1,["user","editor","admin"])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"}).state("listUsers",{url:"/users",templateUrl:"modules/users/views/list-users.client.view.html"}).state("createUsers",{url:"/users/create",templateUrl:"modules/users/views/create-users.client.view.html"}).state("viewUsers",{url:"/users/:usersId",templateUrl:"modules/users/views/view-users.client.view.html"}).state("editUsers",{url:"/users/:usersId/edit",templateUrl:"modules/users/views/edit-users.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("UsersController",["$scope","$stateParams","$location","Authentication","Users",function($scope,$stateParams,$location,Authentication,Users){$scope.authentication=Authentication,$scope.create=function(){var user=new Users({firstName:this.firstName,lastName:this.lastName,displayName:this.displayName,email:this.email,role:this.role});user.$save(function(response){$location.path("users/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(user){if(user){user.$remove();for(var i in $scope.users)$scope.users[i]===user&&$scope.users.splice(i,1)}else $scope.user.$remove(function(){$location.path("users")})},$scope.update=function(){var user=$scope.user;user.$update(function(){$location.path("users/"+user._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.users=Users.query()},$scope.findOne=function(){$scope.user=Users.get({userId:$stateParams.userId})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);